image: docker:latest

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build
  - deploy

## Uncomment the desired CI start sections ##

### MASTER #####################
#build-master:
#  stage: build
#  only:
#    - master
#  except:
#    refs:
#      - tags
#    variables:
#      - $CI_COMMIT_MESSAGE =~ /skip ci/
#  services:
#    - docker:dind
#  before_script:
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" registry.gitlab.com
#  script:
#    - docker build --pull -f docker/app/Dockerfile_app_build -t $CI_REGISTRY_IMAGE:prod --build-arg COMPOSE_PROJECT_NAME="$CI_PROJECT_NAME" .
#    - docker push "$CI_REGISTRY_IMAGE:prod"
#
#deploy-master:
#  stage: deploy
#  only:
#    - master
#  except:
#    refs:
#      - tags
#    variables:
#      - $CI_COMMIT_MESSAGE =~ /skip ci/
#  before_script:
#    - mkdir -p ~/.ssh
#    - chmod 700 ~/.ssh
#    - echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_rsa
#    - chmod 400 ~/.ssh/id_rsa
#    - ssh-keyscan -p $PORT_PROD $HOSTNAME_PROD >> ~/.ssh/known_hosts
#    - chmod 644 ~/.ssh/known_hosts
#  script:
#    - scp -P $PORT_PROD docker-compose.prod.yml $USER_PROD@$HOSTNAME_PROD:$PATH_PROD/docker-compose.yml
#    - ssh -T $USER_PROD@$HOSTNAME_PROD -p $PORT_PROD "cd $PATH_PROD &&
#      docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" registry.gitlab.com &&
#      docker pull $CI_REGISTRY_IMAGE:prod &&
#      sed -i 's/GIT_COMMIT=.*/GIT_COMMIT=\""$CI_COMMIT_SHORT_SHA"\"/' .env &&
#      sed -i 's/GIT_BRANCH=.*/GIT_BRANCH=\""$CI_COMMIT_BRANCH"\"/' .env &&
#      sed -i 's/GIT_DATE=.*/GIT_DATE=\""$CI_COMMIT_TIMESTAMP"\"/' .env &&
#      docker-compose up --remove-orphans -d app &&
#      docker-compose exec -T app php artisan migrate --force &&
#      docker image prune --force"

### STAGING PREMASTER #####################
#build-premaster:
#  stage: build
#  only:
#    - premaster
#  except:
#    refs:
#      - tags
#    variables:
#      - $CI_COMMIT_MESSAGE =~ /skip ci/
#  services:
#    - docker:dind
#  before_script:
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" registry.gitlab.com
#  script:
#    - docker build --pull -f docker/app/Dockerfile_app_build -t $CI_REGISTRY_IMAGE:premaster --build-arg COMPOSE_PROJECT_NAME="$CI_PROJECT_NAME" .
#    - docker push "$CI_REGISTRY_IMAGE:premaster"
#
#deploy-premaster:
#  stage: deploy
#  only:
#    - premaster
#  except:
#    refs:
#      - tags
#    variables:
#      - $CI_COMMIT_MESSAGE =~ /skip ci/
#  before_script:
#    - mkdir -p ~/.ssh
#    - chmod 700 ~/.ssh
#    - echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_rsa
#    - chmod 400 ~/.ssh/id_rsa
#    - ssh-keyscan -p $PORT_STAGING_PREMASTER $HOSTNAME_STAGING_PREMASTER >> ~/.ssh/known_hosts
#    - chmod 644 ~/.ssh/known_hosts
#  script:
#    - scp -P $PORT_STAGING_PREMASTER docker-compose.premaster.yml $USER_STAGING_PREMASTER@$HOSTNAME_STAGING_PREMASTER:$PATH_STAGING_PREMASTER/docker-compose.yml
#    - ssh -T $USER_STAGING_PREMASTER@$HOSTNAME_STAGING_PREMASTER -p $PORT_STAGING_PREMASTER "cd $PATH_STAGING_PREMASTER &&
#      docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" registry.gitlab.com &&
#      docker pull $CI_REGISTRY_IMAGE:premaster &&
#      sed -i 's/GIT_COMMIT=.*/GIT_COMMIT=\""$CI_COMMIT_SHORT_SHA"\"/' .env &&
#      sed -i 's/GIT_BRANCH=.*/GIT_BRANCH=\""$CI_COMMIT_BRANCH"\"/' .env &&
#      sed -i 's/GIT_DATE=.*/GIT_DATE=\""$CI_COMMIT_TIMESTAMP"\"/' .env &&
#      docker-compose up --remove-orphans -d app &&
#      docker-compose exec -T app php artisan migrate --force &&
#      docker image prune --force"

### STAGING TEST #####################
#build-develop:
#  stage: build
#  only:
#    - '/^(?!master|premaster$).+$/'
#  except:
#    refs:
#      - tags
#    variables:
#      - $CI_COMMIT_MESSAGE =~ /skip ci/
#  services:
#    - docker:dind
#  before_script:
#    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" registry.gitlab.com
#  script:
#    - docker build --pull -f docker/app/Dockerfile_app_build -t $CI_REGISTRY_IMAGE:test --build-arg COMPOSE_PROJECT_NAME="$CI_PROJECT_NAME" .
#    - docker push "$CI_REGISTRY_IMAGE:test"
#
#deploy-develop:
#  stage: deploy
#  only:
#    - '/^(?!master|premaster$).+$/'
#  except:
#    refs:
#      - tags
#    variables:
#      - $CI_COMMIT_MESSAGE =~ /skip ci/
#  before_script:
#    - mkdir -p ~/.ssh
#    - chmod 700 ~/.ssh
#    - echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_rsa
#    - chmod 400 ~/.ssh/id_rsa
#    - ssh-keyscan -p $PORT_STAGING_TEST $HOSTNAME_STAGING_TEST >> ~/.ssh/known_hosts
#    - chmod 644 ~/.ssh/known_hosts
#  script:
#    - scp -P $PORT_STAGING_TEST docker-compose.test.yml $USER_STAGING_TEST@$HOSTNAME_STAGING_TEST:$PATH_STAGING_TEST/docker-compose.yml
#    - ssh -T $USER_STAGING_TEST@$HOSTNAME_STAGING_TEST -p $PORT_STAGING_TEST "cd $PATH_STAGING_TEST &&
#      docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" registry.gitlab.com &&
#      docker pull $CI_REGISTRY_IMAGE:test &&
#      sed -i 's/GIT_COMMIT=.*/GIT_COMMIT=\""$CI_COMMIT_SHORT_SHA"\"/' .env &&
#      sed -i 's/GIT_BRANCH=.*/GIT_BRANCH=\""$CI_COMMIT_BRANCH"\"/' .env &&
#      sed -i 's/GIT_DATE=.*/GIT_DATE=\""$CI_COMMIT_TIMESTAMP"\"/' .env &&
#      docker-compose up --remove-orphans -d app &&
#      docker-compose exec -T app php artisan migrate --force &&
#      docker image prune --force"
